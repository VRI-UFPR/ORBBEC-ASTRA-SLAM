FROM dustynv/ros:melodic-ros-base-l4t-r32.7.1

ENV DEBIAN_FRONTEND=noninteractive

ENV ROS_DISTRO melodic
ENV ROS_PYTHON_VERSION 3
ENV ROS_ROOT /opt/ros/${ROS_DISTRO}

RUN rm -f /etc/apt/sources.list.d/kitware.list \
    && apt update \
    && apt install -y libeigen3-dev libpython2.7-dev

# For packages that we need to compile from source
WORKDIR /install_deps 

# Install catch2
RUN git clone https://github.com/catchorg/Catch2.git \
    && cd Catch2 \
    && cmake -Bbuild -H. -DBUILD_TESTING=OFF \
    && cmake --build build/ --target install

# Install pangolin
RUN apt update && apt install -y libgl1-mesa-dev libegl1-mesa-dev libepoxy-dev python3.7-dev
RUN python3.7 -m pip install --upgrade pip setuptools wheel
RUN git clone --recursive https://github.com/stevenlovegrove/Pangolin.git \
    && cd Pangolin \
    # && ./scripts/install_prerequisites.sh --dry-run recommended \
    && cmake -B build -DCMAKE_CXX_FLAGS="-Wno-error -Wno-unused-variable" \
    && cmake --build build -t install \
    && cmake --build build -t pypangolin_pip_install

# Install yaml-cpp
RUN git clone https://github.com/jbeder/yaml-cpp.git \
    && cd yaml-cpp && mkdir build \
    && cd build \
    && cmake -DYAML_BUILD_SHARED_LIBS=on .. \
    && make -j$(nproc) && make install \
    && ldconfig 

# Install dependancies for ROS Orbbec SDK
RUN apt update && apt install -y libdw-dev \ 
    libgflags-dev ros-$ROS_DISTRO-image-geometry \
    ros-$ROS_DISTRO-camera-info-manager ros-$ROS_DISTRO-image-publisher \
    libusb-1.0-0-dev ros-$ROS_DISTRO-backward-ros ros-$ROS_DISTRO-tf2 \
    ros-$ROS_DISTRO-tf2-ros

# Install libuvc
RUN git clone https://github.com/libuvc/libuvc.git \
    && cd libuvc \
    && mkdir build && cd build \
    && cmake .. && make -j4 \
    && sudo make install \
    && sudo ldconfig

# Install CUDA OpenCV
# Dependencies
RUN apt update \
    && apt install -y libjpeg-dev libpng-dev libtiff-dev \
    libavcodec-dev libavformat-dev libswscale-dev libavresample-dev \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
    libxvidcore-dev x264 libx264-dev libfaac-dev libmp3lame-dev libtheora-dev \
    libfaac-dev libmp3lame-dev libvorbis-dev \
    libopencore-amrnb-dev libopencore-amrwb-dev libdc1394-22 libdc1394-22-dev libxine2-dev libv4l-dev v4l-utils \
    && cd /usr/include/linux && ln -s -f ../libv4l1-videodev.h videodev.h \
    && apt install -y libgtk-3-dev \
    && apt install -y python3-dev python3-pip \
    && pip3.6 install numpy==1.19.4 \
    && apt install -y python3-testresources \
    && apt install -y libatlas-base-dev gfortran

# Download and install OpenCV deb
WORKDIR /install_deps
COPY install_opencv.sh .
RUN chmod +x install_opencv.sh && ./install_opencv.sh  